name: Build

run-name: Build ${{ github.ref_name }}

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: "0 9 * * *"
  workflow_dispatch:
    inputs:
      version:
        type: string
        required: true
      publish:
        type: boolean
        default: false
  workflow_call:
    inputs:
      version:
        type: string
        required: true
      publish:
        type: boolean
        default: false
        required: true

jobs:
  build:
    name: Build

    env:
      DOCKER_ACCESS_TOKEN: ${{ secrets.DOCKER_ACCESS_TOKEN }}
      PUBLISH: ${{ inputs.publish }}
      DEBIAN_PLATFORMS: linux/386,linux/amd64,linux/arm,linux/arm64
      ALPINE_PLATFORMS: linux/386,linux/amd64,linux/arm,linux/arm64,linux/ppc64le,linux/s390x

    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.13", "3.12", "3.11", "3.10", "3.9", "3.8" ]
        distro: [ bookworm, bullseye, alpine ]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Set platforms
        run: |
          if [[ ${{ matrix.distro }} == "bookworm" || ${{ matrix.distro }} == "bullseye" ]]; then
            echo "PLATFORM=${{ env.DEBIAN_PLATFORMS }}" >> $GITHUB_ENV
          else
            echo "PLATFORM=${{ env.ALPINE_PLATFORMS }}" >> $GITHUB_ENV
          fi
      - name: Set version
        run: |
          VERSION=${{ inputs.version }}
          echo "VERSION=${VERSION:-latest}" >> $GITHUB_ENV
      - name: Docker build
        run: |
          PYTHON_VERSION=${{ matrix.python-version }} \
          DISTRO=${{ matrix.distro }} \
          ./build.sh
